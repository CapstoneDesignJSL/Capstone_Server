# -*- coding: utf-8 -*-
from __future__ import unicode_literals

# from django.shortcuts import render

# Create your views here.

from rest_framework import viewsets
from server2.capstone_db.serializers import UserSerializers, PictureSerializers
from .models import User, Picture
import base64

from django.http import JsonResponse, HttpResponse
from web3 import Web3, HTTPProvider
from django.views.decorators.csrf import csrf_exempt
import hashlib
import time
rpc_url = "http://localhost:8545"
w3 = Web3(HTTPProvider(rpc_url))

abi="""[
	{
		"constant": true,
		"inputs": [
			{
				"name": "fileHash",
				"type": "string"
			}
		],
		"name": "getFileInfo",
		"outputs": [
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "address"
			},
			{
				"name": "",
				"type": "address"
			},
			{
				"name": "",
				"type": "uint256"
			},
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "fileHash",
				"type": "string"
			}
		],
		"name": "checkExist",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "uploader",
				"type": "address"
			},
			{
				"name": "fileHash",
				"type": "string"
			},
			{
				"name": "fileName",
				"type": "string"
			},
			{
				"name": "filePrice",
				"type": "uint256"
			},
			{
				"name": "fileSize",
				"type": "uint256"
			}
		],
		"name": "upload",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "file_hash",
				"type": "string"
			}
		],
		"name": "getHis",
		"outputs": [
			{
				"name": "",
				"type": "address[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "getOwner",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "fileHash",
				"type": "string"
			}
		],
		"name": "getFileInfo2",
		"outputs": [
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "address"
			},
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "fileHash",
				"type": "string"
			},
			{
				"name": "buyer",
				"type": "address"
			}
		],
		"name": "trans",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "owner2",
				"type": "address"
			}
		],
		"name": "getOwner",
		"outputs": [
			{
				"name": "",
				"type": "string[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
]"""
byte="""6080604052336000806101000a81548173ffffffffffffffffff6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d85806100536000396000f3fe60806040526004361061009e576000357c0100000000000000000000000000000000000000000000000000000000900480630cc9c17b146100a35780632201bb66146100e45780633b8a9f6e1461012157806361919e341461014a578063893d20e8146101875780638da5cb5b146101b2578063c89b615c146101dd578063e281e0051461021c578063f2fde38b14610259578063fa54416114610296575b600080fd5b3480156100af57600080fd5b506100ca60048036036100c591908101906118d2565b6102d3565b6040516100db959493929190611b81565b60405180910390f35b3480156100f057600080fd5b5061010b600480360361010691908101906118d2565b610679565b6040516101189190611b28565b60405180910390f35b34801561012d57600080fd5b506101486004803603610143919081019061182b565b610704565b005b34801561015657600080fd5b50610171600480360361016c91908101906118d2565b610a67565b60405161017e9190611ae4565b60405180910390f35b34801561019357600080fd5b5061019c610b60565b6040516101a99190611ac9565b60405180910390f35b3480156101be57600080fd5b506101c7610b89565b6040516101d49190611ac9565b60405180910390f35b3480156101e957600080fd5b5061020460048036036101ff91908101906118d2565b610bae565b60405161021393929190611b43565b60405180910390f35b34801561022857600080fd5b50610243600480360361023e9190810190611913565b610e6d565b6040516102509190611ac9565b60405180910390f35b34801561026557600080fd5b50610280600480360361027b9190810190611802565b611470565b60405161028d9190611ac9565b60405180910390f35b3480156102a257600080fd5b506102bd60048036036102b89190810190611802565b6114db565b6040516102ca9190611b06565b60405180910390f35b60606000806000806001866040518082805190602001908083835b60208310151561031357805182526020820191506020810190506020830392506102ee565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002016004876040518082805190602001908083835b602083101515610381578051825260208201915060208101905060208303925061035c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004896040518082805190602001908083835b6020831015156103ee57805182526020820191506020810190506020830392506103c9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805490500381548110151561043257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001886040518082805190602001908083835b6020831015156104955780518252602082019150602081019050602083039250610470565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001896040518082805190602001908083835b60208310151561052457805182526020820191506020810190506020830392506104ff565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003015460018a6040518082805190602001908083835b602083101515610593578051825260208201915060208101905060208303925061056e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505094509450945094509450945091939590929450565b6000806001836040518082805190602001908083835b6020831015156106b4578051825260208201915060208101905060208303925061068f565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003015411156106fa57600190506106ff565b600090505b919050565b61070c611603565b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838152509050806001866040518082805190602001908083835b60208310151561079b5780518252602082019150602081019050602083039250610776565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061087892919061165f565b506060820151816003015560808201518160040155905050600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208160400151908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061090e9291906116df565b5050600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208160400151908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061098e9291906116df565b50506004856040518082805190602001908083835b6020831015156109c857805182526020820191506020810190506020830392506109a3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b60606004826040518082805190602001908083835b602083101515610aa15780518252602082019150602081019050602083039250610a7c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610b5457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b0a575b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806001846040518082805190602001908083835b602083101515610beb5780518252602082019150602081019050602083039250610bc6565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002016004856040518082805190602001908083835b602083101515610c595780518252602082019150602081019050602083039250610c34565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004876040518082805190602001908083835b602083101515610cc65780518252602082019150602081019050602083039250610ca1565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054905003815481101515610d0a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001866040518082805190602001908083835b602083101515610d6d5780518252602082019150602081019050602083039250610d48565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e595780601f10610e2e57610100808354040283529160200191610e59565b820191906000526020600020905b815481529060010190602001808311610e3c57829003601f168201915b505050505092509250925092509193909250565b6000806000806001866040518082805190602001908083835b602083101515610eab5780518252602082019150602081019050602083039250610e86565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506004866040518082805190602001908083835b602083101515610f3c5780518252602082019150602081019050602083039250610f17565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004886040518082805190602001908083835b602083101515610fa95780518252602082019150602081019050602083039250610f84565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054905003815481101515610fed57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506001866040518082805190602001908083835b602083101515611052578051825260208201915060208101905060208303925061102d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154905060008573ffffffffffffffffffffffffffffffffffffffff16319050818110156111ce576004876040518082805190602001908083835b6020831015156110e757805182526020820191506020810190506020830392506110c2565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004896040518082805190602001908083835b602083101515611154578051825260208201915060208101905060208303925061112f565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805490500381548110151561119857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694505050505061146a565b600083905060008590508173ffffffffffffffffffffffffffffffffffffffff166108fc6002868115156111fe57fe5b049081150290604051600060405180830381858888f1935050505015801561122a573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc60028681151561125157fe5b049081150290604051600060405180830381858888f1935050505015801561127d573d6000803e3d6000fd5b506004896040518082805190602001908083835b6020831015156112b65780518252602082019150602081019050602083039250611291565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208890806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506004896040518082805190602001908083835b6020831015156113855780518252602082019150602081019050602083039250611360565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600160048b6040518082805190602001908083835b6020831015156113f257805182526020820191506020810190506020830392506113cd565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805490500381548110151561143657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1696505050505050505b92915050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156115f8578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115e45780601f106115b9576101008083540402835291602001916115e4565b820191906000526020600020905b8154815290600101906020018083116115c757829003601f168201915b50505050508152602001906001019061153c565b505050509050919050565b60a060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116a057805160ff19168380011785556116ce565b828001600101855582156116ce579182015b828111156116cd5782518255916020019190600101906116b2565b5b5090506116db919061175f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061172057805160ff191683800117855561174e565b8280016001018555821561174e579182015b8281111561174d578251825591602001919060010190611732565b5b50905061175b919061175f565b5090565b61178191905b8082111561177d576000816000905550600101611765565b5090565b90565b60006117908235611cdc565b905092915050565b600082601f83011215156117ab57600080fd5b81356117be6117b982611c08565b611bdb565b915080825260208301602083018583830111156117da57600080fd5b6117e5838284611cf8565b50505092915050565b60006117fa8235611cee565b905092915050565b60006020828403121561181457600080fd5b600061182284828501611784565b91505092915050565b600080600080600060a0868803121561184357600080fd5b600061185188828901611784565b955050602086013567ffffffffffffffff81111561186e57600080fd5b61187a88828901611798565b945050604086013567ffffffffffffffff81111561189757600080fd5b6118a388828901611798565b93505060606118b4888289016117ee565b92505060806118c5888289016117ee565b9150509295509295909350565b6000602082840312156118e457600080fd5b600082013567ffffffffffffffff8111156118fe57600080fd5b61190a84828501611798565b91505092915050565b6000806040838503121561192657600080fd5b600083013567ffffffffffffffff81111561194057600080fd5b61194c85828601611798565b925050602061195d85828601611784565b9150509250929050565b61197081611c94565b82525050565b600061198182611c4e565b80845260208401935061199383611c34565b60005b828110156119c5576119a9868351611967565b6119b282611c7a565b9150602086019550600181019050611996565b50849250505092915050565b60006119dc82611c59565b808452602084019350836020820285016119f585611c41565b60005b84811015611a2e578383038852611a10838351611a84565b9250611a1b82611c87565b91506020880197506001810190506119f8565b508196508694505050505092915050565b611a4881611ca6565b82525050565b6000611a5982611c6f565b808452611a6d816020860160208601611d07565b611a7681611d3a565b602085010191505092915050565b6000611a8f82611c64565b808452611aa3816020860160208601611d07565b611aac81611d3a565b602085010191505092915050565b611ac381611cd2565b82525050565b6000602082019050611ade6000830184611967565b92915050565b60006020820190508181036000830152611afe8184611976565b905092915050565b60006020820190508181036000830152611b2081846119d1565b905092915050565b6000602082019050611b3d6000830184611a3f565b92915050565b60006060820190508181036000830152611b5d8186611a4e565b9050611b6c6020830185611967565b611b796040830184611967565b949350505050565b600060a0820190508181036000830152611b9b8188611a4e565b9050611baa6020830187611967565b611bb76040830186611967565b611bc46060830185611aba565b611bd16080830184611aba565b9695505050505050565b6000604051905081810181811067ffffffffffffffff82111715611bfe57600080fd5b8060405250919050565b600067ffffffffffffffff821115611c1f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000611c9f82611cb2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ce782611cb2565b9050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d25578082015181840152602081019050611d0a565b83811115611d34576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820c83a887e904a3dc76c1b60ed14279338cc9bcc7246db10db4bf9807d21069b7c6c6578706572696d656e74616cf50037ffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a3e806100536000396000f3fe608060405260043610610093576000357c0100000000000000000000000000000000000000000000000000000000900480630cc9c17b146100985780632201bb66146100d95780633b8a9f6e1461011657806361919e341461013f578063893d20e81461017c5780638da5cb5b146101a7578063e281e005146101d2578063f2fde38b1461020f578063fa5441611461024c575b600080fd5b3480156100a457600080fd5b506100bf60048036036100ba91908101906115c9565b610289565b6040516100d095949392919061183a565b60405180910390f35b3480156100e557600080fd5b5061010060048036036100fb91908101906115c9565b61062f565b60405161010d919061181f565b60405180910390f35b34801561012257600080fd5b5061013d60048036036101389190810190611522565b6106ba565b005b34801561014b57600080fd5b50610166600480360361016191908101906115c9565b610a1d565b60405161017391906117db565b60405180910390f35b34801561018857600080fd5b50610191610b16565b60405161019e91906117c0565b60405180910390f35b3480156101b357600080fd5b506101bc610b3f565b6040516101c991906117c0565b60405180910390f35b3480156101de57600080fd5b506101f960048036036101f4919081019061160a565b610b64565b60405161020691906117c0565b60405180910390f35b34801561021b57600080fd5b50610236600480360361023191908101906114f9565b611167565b60405161024391906117c0565b60405180910390f35b34801561025857600080fd5b50610273600480360361026e91908101906114f9565b6111d2565b60405161028091906117fd565b60405180910390f35b60606000806000806001866040518082805190602001908083835b6020831015156102c957805182526020820191506020810190506020830392506102a4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002016004876040518082805190602001908083835b6020831015156103375780518252602082019150602081019050602083039250610312565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004896040518082805190602001908083835b6020831015156103a4578051825260208201915060208101905060208303925061037f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902080549050038154811015156103e857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001886040518082805190602001908083835b60208310151561044b5780518252602082019150602081019050602083039250610426565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001896040518082805190602001908083835b6020831015156104da57805182526020820191506020810190506020830392506104b5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003015460018a6040518082805190602001908083835b6020831015156105495780518252602082019150602081019050602083039250610524565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b505050505094509450945094509450945091939590929450565b6000806001836040518082805190602001908083835b60208310151561066a5780518252602082019150602081019050602083039250610645565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003015411156106b057600190506106b5565b600090505b919050565b6106c26112fa565b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838152509050806001866040518082805190602001908083835b602083101515610751578051825260208201915060208101905060208303925061072c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061082e929190611356565b506060820151816003015560808201518160040155905050600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816040015190806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906108c49291906113d6565b5050600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816040015190806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906109449291906113d6565b50506004856040518082805190602001908083835b60208310151561097e5780518252602082019150602081019050602083039250610959565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b60606004826040518082805190602001908083835b602083101515610a575780518252602082019150602081019050602083039250610a32565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610b0a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ac0575b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806001866040518082805190602001908083835b602083101515610ba25780518252602082019150602081019050602083039250610b7d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506004866040518082805190602001908083835b602083101515610c335780518252602082019150602081019050602083039250610c0e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004886040518082805190602001908083835b602083101515610ca05780518252602082019150602081019050602083039250610c7b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054905003815481101515610ce457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506001866040518082805190602001908083835b602083101515610d495780518252602082019150602081019050602083039250610d24565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154905060008573ffffffffffffffffffffffffffffffffffffffff1631905081811015610ec5576004876040518082805190602001908083835b602083101515610dde5780518252602082019150602081019050602083039250610db9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060016004896040518082805190602001908083835b602083101515610e4b5780518252602082019150602081019050602083039250610e26565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054905003815481101515610e8f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16945050505050611161565b600083905060008590508173ffffffffffffffffffffffffffffffffffffffff166108fc600286811515610ef557fe5b049081150290604051600060405180830381858888f19350505050158015610f21573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc600286811515610f4857fe5b049081150290604051600060405180830381858888f19350505050158015610f74573d6000803e3d6000fd5b506004896040518082805190602001908083835b602083101515610fad5780518252602082019150602081019050602083039250610f88565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208890806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506004896040518082805190602001908083835b60208310151561107c5780518252602082019150602081019050602083039250611057565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600160048b6040518082805190602001908083835b6020831015156110e957805182526020820191506020810190506020830392506110c4565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805490500381548110151561112d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1696505050505050505b92915050565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156112ef578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112db5780601f106112b0576101008083540402835291602001916112db565b820191906000526020600020905b8154815290600101906020018083116112be57829003601f168201915b505050505081526020019060010190611233565b505050509050919050565b60a060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061139757805160ff19168380011785556113c5565b828001600101855582156113c5579182015b828111156113c45782518255916020019190600101906113a9565b5b5090506113d29190611456565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061141757805160ff1916838001178555611445565b82800160010185558215611445579182015b82811115611444578251825591602001919060010190611429565b5b5090506114529190611456565b5090565b61147891905b8082111561147457600081600090555060010161145c565b5090565b90565b60006114878235611995565b905092915050565b600082601f83011215156114a257600080fd5b81356114b56114b0826118c1565b611894565b915080825260208301602083018583830111156114d157600080fd5b6114dc8382846119b1565b50505092915050565b60006114f182356119a7565b905092915050565b60006020828403121561150b57600080fd5b60006115198482850161147b565b91505092915050565b600080600080600060a0868803121561153a57600080fd5b60006115488882890161147b565b955050602086013567ffffffffffffffff81111561156557600080fd5b6115718882890161148f565b945050604086013567ffffffffffffffff81111561158e57600080fd5b61159a8882890161148f565b93505060606115ab888289016114e5565b92505060806115bc888289016114e5565b9150509295509295909350565b6000602082840312156115db57600080fd5b600082013567ffffffffffffffff8111156115f557600080fd5b6116018482850161148f565b91505092915050565b6000806040838503121561161d57600080fd5b600083013567ffffffffffffffff81111561163757600080fd5b6116438582860161148f565b92505060206116548582860161147b565b9150509250929050565b6116678161194d565b82525050565b600061167882611907565b80845260208401935061168a836118ed565b60005b828110156116bc576116a086835161165e565b6116a982611933565b915060208601955060018101905061168d565b50849250505092915050565b60006116d382611912565b808452602084019350836020820285016116ec856118fa565b60005b8481101561172557838303885261170783835161177b565b925061171282611940565b91506020880197506001810190506116ef565b508196508694505050505092915050565b61173f8161195f565b82525050565b600061175082611928565b8084526117648160208601602086016119c0565b61176d816119f3565b602085010191505092915050565b60006117868261191d565b80845261179a8160208601602086016119c0565b6117a3816119f3565b602085010191505092915050565b6117ba8161198b565b82525050565b60006020820190506117d5600083018461165e565b92915050565b600060208201905081810360008301526117f5818461166d565b905092915050565b6000602082019050818103600083015261181781846116c8565b905092915050565b60006020820190506118346000830184611736565b92915050565b600060a08201905081810360008301526118548188611745565b9050611863602083018761165e565b611870604083018661165e565b61187d60608301856117b1565b61188a60808301846117b1565b9695505050505050565b6000604051905081810181811067ffffffffffffffff821117156118b757600080fd5b8060405250919050565b600067ffffffffffffffff8211156118d857600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b60006119588261196b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119a08261196b565b9050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156119de5780820151818401526020810190506119c3565b838111156119ed576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a7230582077ff5dea0dc1951f845d44d50044c2c593578208a3a866f2e279f8eb3fce1b9c6c6578706572696d656e74616cf50037"""

contract = w3.eth.contract(abi= abi,bytecode= byte)#,bytecode_runtime= contract_interface['bin-runtime'])

contract_address = "0x7581223d3BfCA817038Ad15FC4a7AF4749865CF3"#"0x352092c8a590e1e422093e265db172df7b137b26"#""0xbe69d268a0778be00463258e9e7b40f9b3e0540f"#"0xcbd9937129719519190563c5507b3c35c8444cd1"#"0xcbd9937129719519190563c5507b3c35c8444cd1"#"0x1C94bf71cd2BC7F7C6D54B582C60b6C8E56B1c7B"
contract_instance = contract(w3.toChecksumAddress(contract_address))
# contract_instance=contract.at(contract_address)
# contract_instance= w3.eth.contract(abi).at("0x52f4344cbb2be215d1acc4e9cad19bac2babd5bd")

ACCEPTABLE_EMPTY_STRINGS = ["0x", b"0x", "", b'']

class UserViewSet(viewsets.ModelViewSet):
    queryset = User.objects.all()
    serializer_class = UserSerializers

    # def get(self, request, *args, **kwargs):
    #     return self.list(request, *args, **kwargs)
    #     pass
    pass


class PictureViewSet(viewsets.ModelViewSet):
    queryset = Picture.objects.all()
    serializer_class = PictureSerializers

    pass

def picture_list(request):
    queryset = (Picture.objects.all())
    data=[]

    for i in queryset:
        json_ob = {"picture_name": i.picture_name, "url": "media/"+str(i.image) ,"price":i.price}
        data.insert(0, json_ob)

    print(data)

    return JsonResponse(data, safe=False)



@csrf_exempt
def img_upload(request):
    email = request.POST["email_txt"]
    wallet = User.objects.get(email_txt=email)
    picture_name = request.POST["picture_name"]
    img = request.POST["image"]
    price = int(request.POST["price"])

    w3 = Web3(HTTPProvider(rpc_url))

    imgdata = base64.b64decode(img)

    path = "./media/"+picture_name+".png"
    print(picture_name)
    file_hash = sha256_checksum(path)
    queryset = Picture.objects.get(file_hash=file_hash).count()

    if queryset==0 :
        #저장
        fh=open(path,"wb")
        fh.write(imgdata)
        fh.close()

        # 해시값
        # file_size = os.path.getsize(path)

        print(wallet,picture_name,price)
        print("has",file_hash)
        pic = Picture(file_hash=file_hash,wallet=wallet, picture_name=picture_name, image=picture_name+".png", price=price, author=wallet)
        pic.save()

    else :
        author = Picture.objects.get(file_hash=file_hash)
        pic = Picture(file_hash=file_hash,wallet=wallet, picture_name=picture_name, image=picture_name+".png", price=price, author=author.author)
        pic.save()


    file_name = picture_name + ".png"

    w3.personal.unlockAccount(str(wallet),"123",0)
    # w3.personal.unlockAccount(w3.eth.accounts[0],"admin",0)

    transaction = contract_instance.transact({"gas":100000,"from": str(wallet)})
    # transaction = contract_instance.transact({"from": w3.eth.accounts[0]})

    tx_hash = transaction.upload(str(wallet),file_hash,  file_name, price, 100)
    print("tx= ",tx_hash)
    print(transaction)
    w3.miner.start(5)
    time.sleep(10)
    w3.miner.stop()

    return HttpResponse("true")


def delete(request,name):
    memo = Picture.objects.all()
    memo2 = User.objects.all()

    for i in memo:
        i.delete()
        pass
    # for i in memo2:
    #     i.delete()
    #     pass

    # memo.delete()
    return HttpResponse("삭제 ="+ name)

def sha256_checksum(filename, block_size=65536):
    sha256 = hashlib.sha256()
    with open(filename, 'rb') as f:
        for block in iter(lambda: f.read(block_size), b''):
            sha256.update(block)
    return sha256.hexdigest()


def check_account(request):

    user_email = request.GET.get('email', '')

    queryset = User.objects.filter(email_txt=user_email).count()

    if queryset==0 :

        #make account

        w3 = Web3(HTTPProvider(rpc_url))
        pwd = "123"
        address = w3.personal.newAccount(pwd)

        u = User(email_txt=user_email, wallet=address, balance=0)
        u.save()
        print('email',user_email)
        print('wallet', address)
        return HttpResponse(address)
    else :
        print('user email =', user_email)
        # print('user account = ', wallet)
        return HttpResponse(user_email)

    pass


def make_account(request, email):
    w3 = Web3(HTTPProvider(rpc_url))
    pwd = "123"
    address = w3.personal.newAccount(pwd)

    u = User(email_txt=email, wallet=address, balance=0)

    u.save()

    return HttpResponse(address)


def mining(request):
    email = request.GET.get('email', '')

    # email = request.POST["email"]
    print(email)
    tem = email[:-10] + "@gmail.com"
    print(tem)

    queryset = User.objects.get(email_txt=email)

    w3 = Web3(HTTPProvider(rpc_url))


    w3.miner.setEtherBase(queryset.wallet)

    # w3.miner.setEtherBase(w3.eth.accounts[0])
    bal1 = w3.eth.getBalance(queryset.wallet)
    # bal1 = w3.eth.getBalance(w3.eth.accounts[0])

    print(bal1)
    print(w3.miner.start(5))
    time.sleep(10)
    w3.miner.stop()
    print(bal1)
    return HttpResponse("true")


def mining_stop(request):
    w3 = Web3(HTTPProvider(rpc_url))

    # user_email = request.GET.get('email', '')
    print("ghcncncnn")
    # print(user_email)
    # queryset = User.objects.get(email_txt=user_email)
    user_email = request.GET.get('email', '')

    data = w3.miner.stop()
    w3.miner.stopAutoDAG()
    w3.miner.stop()
    w3.miner.stop()
    w3.miner.stop()
    w3.miner.stop()
    w3.miner.stop()
    w3.miner.stop()
    w3.miner.stop()

    # bal = w3.eth.getBalance(queryset.wallet)
    # print(type(bal))
    # print("tttttttttttttttttttttttttt")
    # data = {"bal":str(bal)}
    print(data)
    return JsonResponse(data, safe=False)

@csrf_exempt
def balance(request):
    # email = request.GET.get('email','')
    email = request.GET.get('email', '')

    # email = request.POST["email"]
    print(email)
    tem = email[:-10]+"@gmail.com"
    print(tem)

    # wallet = User.objects.get(email_txt=email)

    # user_email="test1@naver.com"

    queryset = User.objects.get(email_txt=tem)

    w3 = Web3(HTTPProvider(rpc_url))
    bal = w3.eth.getBalance(queryset.wallet)
    # bal = w3.eth.getBalance(w3.eth.accounts[0])
    print(bal)
    print("tttttttttttttttttttttttttt")
    test = bal/1000000000000000000

    data = {"bal":str(int(test))} #,"wallet":str()}
    print(data)
    return JsonResponse(data, safe=False)
    # return HttpResponse(int(test))


@csrf_exempt
def transaction(request):
    picture_name = request.POST['picture_name']
    wallet = User.objects.get(email_txt=request.POST["email_txt"])
    w3 = Web3(HTTPProvider(rpc_url))

    w3.personal.unlockAccount(str(wallet),"123",0)
    print(str(wallet))
    # w3.personal.unlockAccount(w3.eth.accounts[0],"admin",0)

    transaction = contract_instance.transact({"gas":1000000,"from": str(wallet)})

    path = "./media/" + picture_name + ".png"


    print(path)
    file_hash = sha256_checksum(path)  # 해시값

    tx_hash = transaction.trans(file_hash,str(wallet))
    print("tx= ",tx_hash)
    print(transaction)
    w3.miner.start(5)
    time.sleep(5)
    w3.miner.stop()
    if file_hash :
        return HttpResponse("False")
    else :
        return HttpResponse("True")




def file_info(request):
    # w3 = Web3(HTTPProvider(rpc_url))
    picture_name= request.GET.get('name')

    path = "./media/" + picture_name + ".png"
    print(path)
    file= sha256_checksum(path)
    print(file)
    tt=contract_instance.call().getFileInfo2(w3.eth.accounts[3])
    print(tt)
    return HttpResponse(tt)